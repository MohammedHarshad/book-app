{"version":3,"sources":["Books.js","App.js","reportWebVitals.js","index.js"],"names":["Books","useState","books","setBooks","useEffect","a","Axios","get","res","console","log","data","results","fetchBooks","className","map","book","author","book_image","buy_links","description","price","primary_isbn10","publisher","rank","title","style","width","src","alt","link","name","url","href","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSA6DeA,EAtDD,WACV,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAVAC,qBAAU,YACU,uCAAC,4BAAAC,EAAA,sEACIC,IAAMC,IAAN,sHADJ,OACPC,EADO,OAGZC,QAAQC,IAAIF,EAAIG,KAAKC,QAAQV,OAC9BC,EAASK,EAAIG,KAAKC,QAAQV,OAJb,2CAAD,qDAOhBW,KACD,IAEC,gCACI,qBAAKC,UAAU,qEAAf,SACS,oBAAIA,UAAU,UAAd,qBAET,yBAASA,UAAU,kDAAnB,SACKZ,EAAMa,KAAI,SAACC,GACZ,IAASC,EAA4FD,EAA5FC,OAAQC,EAAoFF,EAApFE,WAAYC,EAAwEH,EAAxEG,UAAWC,EAA6DJ,EAA7DI,YAAaC,EAAgDL,EAAhDK,MAAOC,EAAyCN,EAAzCM,eAAgBC,EAAyBP,EAAzBO,UAAUC,EAAeR,EAAfQ,KAAMC,EAAST,EAATS,MAC5F,OACI,0BAASX,UAAU,qCAAsCY,MAAO,CAACC,MAAO,SAAxE,UACK,qBAAKb,UAAU,oBAAf,SACG,qBAAMA,UAAU,YAAYc,IAAKV,EAAYW,IAAKJ,MAEtD,sBAAKX,UAAU,YAAf,UACI,oBAAIA,UAAU,+BAAd,SAA8CW,IAC9C,mBAAGX,UAAU,kBAAb,SAAgCM,IAChC,oBAAGN,UAAU,gCAAb,qBAAqD,sBAAMA,UAAU,eAAhB,SAAgCG,IAArF,UAER,qBAAIH,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,yBAA4C,sBAAMA,UAAU,eAAhB,SAAgCS,OAC5E,qBAAIT,UAAU,kBAAd,kBAAsC,sBAAMA,UAAU,eAAhB,SAAgCQ,OACtE,qBAAIR,UAAU,kBAAd,oBAAuC,sBAAMA,UAAU,eAAhB,SAAgCO,UAE3E,6BACA,qBAAMP,UAAU,YAAhB,SACGK,EAAUJ,KAAI,SAACe,GACZ,IAAOC,EAAWD,EAAXC,KAAMC,EAAKF,EAALE,IACd,OACA,mBAAclB,UAAU,kCAAkCmB,KAAMD,EAAKE,OAAO,SAA5E,SAAsFH,GAA9EA,YAnB0EP,YClB5FW,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3b9cf54.chunk.js","sourcesContent":["import React, {useEffect, useState}from 'react'\nimport Axios from 'axios';\nimport  './Books.css'\n \n// const apiKey='oa3pfL0wPmxxffTXPPASqfBwKJEmjF3y';\nconst url= 'https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=oa3pfL0wPmxxffTXPPASqfBwKJEmjF3y';\n\nconst Books = () => {\n    const [books, setBooks]= useState([]);\n\n    useEffect(() => {\n        const fetchBooks=async()=>{\n            const res= await Axios.get(`https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=oa3pfL0wPmxxffTXPPASqfBwKJEmjF3y`);\n\n             console.log(res.data.results.books);\n            setBooks(res.data.results.books);\n        }\n\n        fetchBooks();\n    }, [])\n    return (\n        <div>\n            <div className=\"  text-light navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n                     <h1 className=\"heading\">Books</h1>\n            </div>\n            <section className=\" c-nav d-flex flex-wrap  justify-content-center\">\n                {books.map((book) => {\n                const {  author, book_image, buy_links, description, price, primary_isbn10, publisher,rank, title} = book;\n                return(\n                    <article className=\"shadow-lg border rounded  m-4 card\"  style={{width: \"500px\"}} key={rank}>\n                         <div className=\" m-3 text-center \">\n                            <img  className=\"img-fluid\" src={book_image} alt={title}/>\n                        </div>\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title text-primary fs-2\">{title}</h3>\n                            <p className=\" fs-5 card-text\">{description}</p>\n                            <p className=\"card-subtitle mb-2 text-muted\">Author: <span className=\"text-primary\">{author}</span> </p>\n                        </div>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\"> Publisher: <span className=\"text-primary\">{publisher}</span></li> \n                        <li className=\"list-group-item\" > ID: <span className=\"text-primary\">{primary_isbn10}</span></li> \n                        <li className=\"list-group-item\">Price: <span className=\"text-primary\">{price}</span></li> \n                    </ul>\n                    <ul>\n                    <div  className=\"card-body\" > \n                      {buy_links.map((link)=>{\n                          const {name, url}=link;\n                         return( \n                         <a key={name} className=\" shadow btn btn-primary p-2 m-1\" href={url} target=\"_blank\">{name}</a> \n                         ) \n                      })}\n                    </div>\n                    </ul>\n                    </article>\n                )\n                 })}\n            </section>\n        </div>\n    )\n}\n\nexport default Books\n"," import './App.css';\nimport Books from './Books';\n\nfunction App() {\n  return (\n    <div >\n      <Books/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}